<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AACkpKQupKSkWKWlpG+mpaR8pKSkiqSkpJGkpKSRpKSkkqSkpJKkpKSRpKSkkKSkpIakpKR7pKSkaaSk
        pE+kpKQdpKSkJaalpUaXnKFki5Sef6WlpHCkpKRypKSkeKSkpICkpKR/pKSkdaSkpHOkpKRtoqKiaJ2d
        nWukpKRApKSkFx9OhAAeTYQKI1GFjyRShs8iUYVDTXGUABJDfgAAAAAAAAAAAAAAAACBgYEAfn5+DomJ
        iX6Hh4fJgoKCTYqKigAqVogAK1eJHytXidcmU4b/JlOG4SZThk4jS38AJlKFAH9/fwCEhIQAg4ODIIOD
        g6qJiYnGj4+PioeHh8iSkpIYO2SSAOvw8QBAZ5RKL1uL3iZUh/8mVIfmJlWIVx9XjgFCWnUAh4eHOISE
        hMaDg4P/goKC8IqKisGYmJiOpKSkDQAAAABhgqcAACFoAEJsmEExYJHYJ1qN/yZajuooXZBij5CRWIyM
        jN6JiYn/hoaG/4yMjO+cnJx4s7OzCqqqqgAAAAAAAAAAAGOLsAAXVYwARHShOTFomtAsZJb/YH2X85SV
        lfOSkpL/kJCQ/5eXl9yjo6NTxcXFA7OzswAAAAAAAAAAAAAAAAAAAAAAZ5G0AGaGoABliadMe5Ch8Jud
        nv+bm5v/m5qa/6KiosKwr640ZlhOAAB62gEAftgAAH7XALKysgCzs7MUsbGxP7CwsDCsrKw2qqmpu6en
        pv6jo6P/oaOk/3yYq/9GgqyPClmXBQCJ3zEAjuKcAJfnagCg7Aq4uLghtra2uLS0tPqysrLvr6+v6K2t
        rf+rq6v/rq2t74Khtdcyf7H+KHmv+Cp8sYUDjd+BAJTl/wCe6/QDpu9Yurq6bbu7u/XAwMCnvLy8pLS0
        tPexsbH/tbW14r69vFxTlsEjN4i7sS2Ct/8chcX5ApPi9QSe6/wQq/HlFLH0XsPDw1zGxsZyz8/PCdDQ
        0Ai4uLiktra2/7u7u2aampoASpXFAE+VwhoijMvCBZHf/wCb6v8Qqe+6M7z1Kyi89wzT09MH09PTA8XF
        xQDBwcECurq6jbm5uf+8vLxpm7C+AAGH3TgAit+MAJHk4gOb6f8Mp+/zFK/zXxmw8gADq/MAAAAAAMXF
        xQDJyckMwMDAfb6+vvO/v7/uxMTERP/RrQATk+GOBJHi/wCZ6P8Rp+68LLfzQiy79gcsuvUAAAAAAAAA
        AADMzMwAz8/PHMjIyJDHx8efycnJTNHR0ARNr+MANanpGRei6qgIpO39DqzxZgup8ABUzPoAAAAAAAAA
        AAAAAAAAAAAAAPPz8wD29vYB9fX1Au7u7gD///8A9vz/ACuz8QAytfEbIrPzgh+19CQitvQAAAAAAAAA
        AAAAAAAAAAAAAAAAAACH4QAAgcAAAICAAADgAQAA8AMAAPgJAACAAAAAAAAAAAAAAAABgAAAIQMAAMED
        AADBDwAA548AAA==
</value>
  </data>
</root>